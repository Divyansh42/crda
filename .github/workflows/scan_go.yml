# CI Test - Build the action container
# build test container which has default test files and validate
name: CRDA scan Golang Example
on: [ push, workflow_dispatch ]
jobs:
  test:
    runs-on: ubuntu-latest
    name: Analyse Golang project
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: rafiu007/golang-vuln-demo

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'

      - run: |
          go mod vendor

      - name: Install CRDA
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          github_pat: ${{ github.token }}
          crda: "latest"

      - name: CRDA Scan
        id: scan
        uses: divyanshu42/crda-action@update
        with:
          manifest_file_path: go.mod
          # crda_key: ${{ secrets.CRDA_KEY }}
          snyk_token: ${{ secrets.SNYK_TOKEN }}
          consent_telemetry: true

      - name: Print Analysis Report
        if: always()
        run: cat crda_analysis_report.json

      - name: Print Sarif
        run: cat output.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: output.sarif
